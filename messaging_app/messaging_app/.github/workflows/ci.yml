name: Django CI

on:
  push:
    paths:
      - 'messaging_app/**'
  pull_request:
    paths:
      - 'messaging_app/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Faithoverfear@1998
          MYSQL_DATABASE: alx_airbnb_database
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: Faithoverfear@1998
      MYSQL_DATABASE: alx_airbnb_database

    defaults:
      run:
        working-directory: messaging_app

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-libmysqlclient-dev build-essential mysql-client

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 coverage

    - name: Run flake8 linting
      run: |
        # Fail if any error detected
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Additional lint info, will NOT fail the build
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h "$MYSQL_HOST" --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Run Django migrations
      run: |
        python manage.py migrate

    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test

    - name: Generate coverage report
      run: |
        coverage xml
        coverage report

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml
